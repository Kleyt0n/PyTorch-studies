{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"6_linear_regressionipynb","provenance":[],"authorship_tag":"ABX9TyPwuO1WsAYkU4tultHdVvPH"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","metadata":{"id":"MsdGvk8AD_cn"},"source":["# Linear Regression\n"," 1. Design model (input, output size, forward pass)\n"," 2. Construct loss and optimizer\n"," 3. Training loop\n","  - forward pass: compute prediction and loss\n","  - backward pass: gradients\n","  - update weights"]},{"cell_type":"code","metadata":{"id":"ZOqRyTigD-MY","executionInfo":{"status":"ok","timestamp":1626974157497,"user_tz":180,"elapsed":322,"user":{"displayName":"Kleyton Costa","photoUrl":"","userId":"09554574939383241099"}}},"source":["import torch\n","import torch.nn as nn\n","import numpy as np\n","from sklearn import datasets\n","import matplotlib.pyplot as plt"],"execution_count":11,"outputs":[]},{"cell_type":"code","metadata":{"id":"fjxpzxetJ48d","executionInfo":{"status":"ok","timestamp":1626974179199,"user_tz":180,"elapsed":351,"user":{"displayName":"Kleyton Costa","photoUrl":"","userId":"09554574939383241099"}}},"source":["# 0) setup data\n","\n","X_numpy, y_numpy = datasets.make_regression(n_samples = 100, n_features = 1, noise = 20, random_state = 1)\n","\n","X = torch.from_numpy(X_numpy.astype(np.float32))\n","y = torch.from_numpy(y_numpy.astype(np.float32))\n","y = y.view(y.shape[0], 1)\n","\n","n_samples, n_features = X.shape"],"execution_count":12,"outputs":[]},{"cell_type":"code","metadata":{"id":"kC7sqQOkKy6-","executionInfo":{"status":"ok","timestamp":1626974181910,"user_tz":180,"elapsed":18,"user":{"displayName":"Kleyton Costa","photoUrl":"","userId":"09554574939383241099"}}},"source":["# 1) model\n","\n","input_size = n_features\n","output_size = 1\n","model = nn.Linear(input_size, output_size)"],"execution_count":13,"outputs":[]},{"cell_type":"code","metadata":{"id":"eCW7_bQmLDdI","executionInfo":{"status":"ok","timestamp":1626974184188,"user_tz":180,"elapsed":294,"user":{"displayName":"Kleyton Costa","photoUrl":"","userId":"09554574939383241099"}}},"source":["# 2) loss and optimizer\n","\n","learning_rate = 0.01\n","criterion = nn.MSELoss()\n","optimizer = torch.optim.SGD(model.parameters(), lr = learning_rate)"],"execution_count":14,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-e2SKG9pLUJ6","executionInfo":{"status":"ok","timestamp":1626974186782,"user_tz":180,"elapsed":285,"user":{"displayName":"Kleyton Costa","photoUrl":"","userId":"09554574939383241099"}},"outputId":"c4269d30-8f02-42e5-ace5-929871cd061c"},"source":["# 3) training loop\n","\n","n_epochs = 100\n","for epoch in range(n_epochs):\n","  # forward pass and loss\n","  y_pred = model(X)\n","  loss = criterion(y_pred, y)\n","\n","  #backward pass and update\n","  loss.backward()\n","  optimizer.step()\n","\n","  #zero grad before new step\n","  optimizer.zero_grad()\n","\n","  if (epoch+1) % 10 == 0:\n","    print(f'epoch: {epoch+1}, loss = {loss.item():.4f}')"],"execution_count":15,"outputs":[{"output_type":"stream","text":["epoch: 10, loss = 4299.7881\n","epoch: 20, loss = 3207.5588\n","epoch: 30, loss = 2418.0168\n","epoch: 40, loss = 1846.6313\n","epoch: 50, loss = 1432.6887\n","epoch: 60, loss = 1132.5137\n","epoch: 70, loss = 914.6418\n","epoch: 80, loss = 756.3761\n","epoch: 90, loss = 641.3209\n","epoch: 100, loss = 557.6200\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":265},"id":"s5OYPeOlMIOY","executionInfo":{"status":"ok","timestamp":1626974191955,"user_tz":180,"elapsed":389,"user":{"displayName":"Kleyton Costa","photoUrl":"","userId":"09554574939383241099"}},"outputId":"0f314aad-80dc-4411-8ea6-c4d43e236210"},"source":["# 4) plot\n","\n","predicted = model(X).detach().numpy()\n","plt.plot(X_numpy, y_numpy, 'ro')\n","plt.plot(X_numpy, predicted, 'b')\n","plt.show()"],"execution_count":16,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]}]}